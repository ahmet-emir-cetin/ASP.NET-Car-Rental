@using System.Globalization
@model happylifeluxury.Models.IndexViewModel
@{
    Layout = "~/Views/Shared/Admin/_Layout.cshtml";
    ViewData["Title"] = "Car Rental";
}
 @{await Html.RenderPartialAsync("Admin/_Modal");}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success" role="alert">@TempData["success"]</div>
}
@if (TempData["Danger"] != null)
{
    <div class="alert alert-danger" role="alert">@TempData["Danger"]</div>
}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex align-items-center">
                    <h4 class="card-title">Rezervasyonlar</h4>
                    <button class="btn btn-primary btn-round ms-auto" data-bs-toggle="modal"
                        data-bs-target="#ReservationModal">
                        <i class="fa fa-plus"></i>
                        Ekle
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="add-row" class="display table table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="width: 15%;">Müşteri Adı</th>
                                <th style="width: 25%;">Alış-İade Ofisi</th>
                                <th style="width: 20%;">Araç</th>
                                <th style="width: 12%;">Alış-İade Tarihi</th>
                                <th style="width: 10%;">Tutar</th>
                                <th style="width: 8%;">Durum</th>
                                <th style="width: 10%">Action</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>Müşteri Adı</th>
                                <th>Alış-İade Ofisi</th>
                                <th>Araç</th>
                                <th>Alış-İade Tarihi</th>
                                <th>Tutar</th>
                                <th>Durum</th>
                                <th>Action</th>
                            </tr>
                        </tfoot>
                        <tbody>
                            @foreach(var item in Model.Reservations!)
                            {
                            @foreach(var itemCus in Model.Customers!)
                            {
                            @if(item.CustomerId == itemCus.Id)
                            {
                            <tr>
                                <td>@itemCus.FirstName @itemCus.LastName</td>
                                <td>
                                    @foreach(var itemLocation in Model.Locations!)
                                    {
                                    @if(Convert.ToInt16(item.LocationPickup) == itemLocation.Id)
                                    {
                                        @itemLocation.LocatioName.ToString()
                                    }
                                    @if(Convert.ToInt16(item.LocationDropoff) == itemLocation.Id)
                                    {
                                        @Html.Raw(" - " + itemLocation.LocatioName)
                                    }
                                    }
                                </td>
                                <td>
                                    @foreach(var itemCar in Model.Cars!)
                                    {
                                    if(item.CarId == itemCar.Id)
                                    {
                                        @Html.Raw(itemCar.CarName.ToString() + " " + itemCar.CarModel + " Model")
                                    }
                                    }
                                </td>
                                <td>
                                    @{
                                        DateTime dateDropoff = DateTime.ParseExact(item.DateDropoff, "dd-MM-yyyy", CultureInfo.InvariantCulture);

                                        // Formatla dizeye çevir
                                        string formattedDate = dateDropoff.ToString("dd/MM/yyyy");

                                        DateTime datePickup = DateTime.ParseExact(item.DatePickup, "dd-MM-yyyy", CultureInfo.InvariantCulture);

                                        // Formatla dizeye çevir
                                        string formattedDate2 = datePickup.ToString("dd/MM/yyyy");
                                    }
                                    @formattedDate2 - @formattedDate
                                </td>
                                <td>@string.Format("{0:#,0.####}₺", item.TotalPrice)</td>
                                <td>
                                    @switch(item.Status)
                                    {
                                        case 0:
                                        <span class="badge badge-success">Completed</span>
                                        break;
                                        case 1:
                                        <span class="badge badge-success">Araç Teslim Edildi</span>
                                        break;
                                        case 2:
                                        <span class="badge badge-success">Araç İade Edildi</span>
                                        break;
                                        case 3:
                                        <span class="badge badge-danger">İptal Edildi</span>
                                        break;
                                        case 4:
                                        <span class="badge badge-secondary">Bekleyen Rezervasyon</span>
                                        break;
                                        case 5:
                                        <span class="badge badge-secondary">Ödeme Alınamadı</span>
                                        break;
                                        case 6:
                                        <span class="badge badge-secondary">Ofiste Ödeme</span>
                                        break;
                                        default:
                                        break;
                                    }
                                </td>
                                <td>
                                    <div class="form-button-action">
                                        <button value="@item.Id" type="submit" data-action="edit" id="editbtnRes" data-id="@item.Id" data-bs-toggle="tooltip" title=""
                                            class="btn btn-link btn-primary btn-lg" data-original-title="Edit Task">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                        <form action="/admin/reservation/delete" method="post">
                                        @Html.AntiForgeryToken()
                                        <button value="@item.Id" name="Id" type="submit" data-bs-toggle="tooltip" title=""
                                            class="btn btn-link btn-danger" data-original-title="Remove">
                                            <i class="fa fa-times"></i>
                                        </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                            }
                            }
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>
<script src="~/admin/assets/js/plugin/datatables/datatables.min.js"></script>
<script src="~/admin/assets/js/site.js"></script>
